buildscript {
    repositories {
        maven { url 'https://repo.spring.io/snapshot' }
        maven { url 'https://repo.spring.io/libs-milestone' }
        gradlePluginPortal()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.3.4.RELEASE'
        classpath 'com.bmuschko:gradle-docker-plugin:6.6.1'
    }
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

project.version = project.properties.getOrDefault('testVersion', "0.7.0")
apply from: "repo-tasks.gradle"
apply from: "helm-tasks.gradle"

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-webflux:${versions.springBoot}")
    compile("org.springframework.boot:spring-boot-starter-actuator:${versions.springBoot}") {
        exclude group: 'io.micrometer', module: 'micrometer-core'
    }
    compile("org.springframework.boot:spring-boot-starter-validation:${versions.springBoot}")
    compile 'io.micrometer:micrometer-registry-prometheus:1.6.0'
    compile 'com.fasterxml.jackson:jackson-bom:2.9.8'
    compile 'com.google.guava:guava:27.1-jre'
    compile 'io.prometheus:simpleclient_hotspot:0.6.0'
    compile 'org.apache.commons:commons-lang3:3.9'
    compile 'org.json:json:20200518'

    testImplementation "org.springframework.boot:spring-boot-starter-test:${versions.springBoot}"
    testImplementation 'io.projectreactor:reactor-test'
    testCompile "org.mockito:mockito-core:3.2.0"
    testCompile "org.mockito:mockito-junit-jupiter:3.2.0"
    testCompile "net.bytebuddy:byte-buddy:1.10.6" //for some reason it is needed but not included in mockito-core
    testCompile "org.junit.jupiter:junit-jupiter-api:${versions.junit.jupiter}"
    testCompile "org.junit.jupiter:junit-jupiter-engine:${versions.junit.jupiter}"
    testCompile "org.junit.jupiter:junit-jupiter-params:${versions.junit.jupiter}"
}

jar {
    enabled = true
}

bootJar {
    baseName = 'service'
    version = ''
}

test {
    useJUnitPlatform()
}

check.finalizedBy(tasks.getByPath(':service-functional:check'))
