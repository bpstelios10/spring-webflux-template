apiVersion: v1
kind: Service
metadata:
  name: webflux-mocks
  labels:
    app: webflux-mocks
spec:
  ports:
  - port: 9090
    name: client
  selector:
    app: webflux-mocks
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webflux-mocks
  labels:
    app: webflux-mocks
spec:
  replicas: {{ .Values.service.replicasCount }}
  selector:
    matchLabels:
      app: webflux-mocks
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: webflux-mocks
    spec:
      containers:
      - name: webflux-mocks
        image: {{ .Values.service.image.repository }}
        resources:
          limits:
            memory: "512Mi"
          requests:
            memory: "512Mi"
            cpu: 0
        readinessProbe:
          httpGet:
            path: /__admin
            port: http
          initialDelaySeconds: 15
          timeoutSeconds: 2
        livenessProbe:
          httpGet:
            path: /__admin
            port: http
          initialDelaySeconds: 15
          timeoutSeconds: 2
        ports:
        - containerPort: 9090
          name: http
          protocol: TCP
        envFrom:
        - configMapRef:
            name: {{ .Values.deployEnv }}-config
            optional: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30