import stelios.tools.helm.plugin.FileLoaderHelper
import org.apache.commons.io.FileUtils

task copyHelmPluginRequiredFiles() {
    copyFileFromResources("helm-deployment-library/Chart.yaml", "helm-deployment-library/Chart.yaml")
    copyFileFromResources("helm-deployment-library/templates/_service-deployment.tpl", "helm-deployment-library/templates/_service-deployment.tpl")
    copyFileFromResources("gitignore", ".gitignore")
}

def copyFileFromResources(def fileToCopy, def destination) {
    File file = new File("$project.projectDir/helm/$destination")
    InputStream is = FileLoaderHelper.class.getClassLoader().getResourceAsStream("$fileToCopy")
    FileUtils.copyInputStreamToFile(is, file)
}

buildscript {
    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
        maven {
            url myMavenRepoReadUrl
            credentials {
                username 'myMavenRepo'
                password myMavenRepoReadPassword
            }
        }
    }

    dependencies {
        classpath 'io.franzbecker:gradle-lombok:2.1'
        classpath 'stelios.tools:helm-plugin:0.2.0'
        classpath 'commons-io:commons-io:2.6'
    }
}

wrapper {
    gradleVersion = "5.6.1"
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.franzbecker.gradle-lombok'

    group = 'framework.templates.springbootwebflux'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

ext {
    versions = [
            springBoot: "2.3.4.RELEASE",
            spring    : "5.2.6.RELEASE",
            junit     : [
                    jupiter: "5.5.2"
            ]
    ]
}
