repositories {
    mavenCentral()
}

dependencies {
    implementation project(":service")
    implementation project(":service-mocks")
    implementation project(":service").sourceSets.main.output
    implementation project(":service-mocks").sourceSets.main.output

    implementation 'io.cucumber:cucumber-spring:7.15.0'
    implementation 'io.cucumber:cucumber-java8:7.15.0'

    implementation 'org.apache.httpcomponents.client5:httpclient5:5.2.3'
    implementation "org.springframework.boot:spring-boot-starter-test:${versions.springBoot}"

    test.useJUnitPlatform()
}

jar.enabled = false

task localFunctional(type: JavaExec) {
    group = 'Verification'
    mainClass = 'io.cucumber.core.cli.Main'
    classpath = project.sourceSets.test.runtimeClasspath
    args = [
            "--tags", "not @wip and not @open-circuit",
            "--plugin", "pretty",
            "--plugin", "html:build/cucumber-report",
            "--plugin", "junit:build/junit-test-report.xml",
            "--plugin", "json:build/cucumber-report.json",
            "--glue", "framework.templates.springbootwebflux.functional.steps",
            "src/main/resources/features/"
    ]
    jvmArgs = ["-XX:MaxMetaspaceSize=128m", "-Xmx256m", "-Xms256m", "-Xss256k"]
    dependsOn = ['testClasses']
}

task openCircuitFunctional(type: JavaExec) {
    group = 'Verification'
    mainClass = 'io.cucumber.core.cli.Main'
    classpath = project.sourceSets.test.runtimeClasspath
    args = [
            '--tags', '@open-circuit and not @wip',
            "--plugin", "pretty",
            "--plugin", "html:build/cucumber-report",
            "--plugin", "junit:build/junit-test-report.xml",
            "--plugin", "json:build/cucumber-report.json",
            "--glue", "framework.templates.springbootwebflux.functional.steps",
            "src/main/resources/features/"
    ]
    jvmArgs = ["-XX:MaxMetaspaceSize=128m", "-Xmx256m", "-Xms256m", "-Xss256k"]
    dependsOn = ['testClasses']
    mustRunAfter = [localFunctional]
}

check.dependsOn (localFunctional, openCircuitFunctional)
